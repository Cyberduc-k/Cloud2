version: '3.1'
services:
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - '${HOME}/Documents/mongo:/data/db'
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGODB_USER:-admin}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGODB_PASSWORD:-admin}'
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USER:-admin}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASSWORD:-admin}'
  login:
    image: sudokus/login
    build:
      context: .
      dockerfile: docker/login
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    links:
      - mongodb
    environment:
      MONGODB_USER: '${MONGODB_USER:-admin}'
      MONGODB_PASSWORD: '${MONGODB_PASSWORD:-admin}'
      MONGODB_CONNECTION: 'mongodb'
  startSudoku:
    image: sudokus/start
    build:
      context: .
      dockerfile: docker/startSudoku
    ports:
      - 8082:8081
    depends_on:
      - mongodb
      - rabbitmq
    links:
      - mongodb
      - rabbitmq
    restart: on-failure
    environment:
      MONGODB_USER: '${MONGODB_USER:-admin}'
      MONGODB_PASSWORD: '${MONGODB_PASSWORD:-admin}'
      MONGODB_CONNECTION: 'mongodb'
      RABBITMQ_USER: '${RABBITMQ_USER:-admin}'
      RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD:-admin}'
      RABBITMQ_CONNECTION: 'rabbitmq'
  generateSudoku:
    image: sudokus/generate
    build:
      context: .
      dockerfile: docker/generateSudoku
    ports:
      - 8083:8081
    depends_on:
      - mongodb
      - rabbitmq
    links:
      - mongodb
      - rabbitmq
    restart: on-failure
    environment:
      MONGODB_USER: '${MONGODB_USER:-admin}'
      MONGODB_PASSWORD: '${MONGODB_PASSWORD:-admin}'
      MONGODB_CONNECTION: 'mongodb'
      RABBITMQ_USER: '${RABBITMQ_USER:-admin}'
      RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD:-admin}'
      RABBITMQ_CONNECTION: 'rabbitmq'
  stopSudoku:
    image: sudokus/stop
    build:
      context: .
      dockerfile: docker/stopSudoku
    ports:
      - 8084:8081
    depends_on:
      - mongodb
    links:
      - mongodb
    restart: on-failure
    environment:
      MONGODB_USER: '${MONGODB_USER:-admin}'
      MONGODB_PASSWORD: '${MONGODB_PASSWORD:-admin}'
      MONGODB_CONNECTION: 'mongodb'