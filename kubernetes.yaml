apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: generatesudoku
      name: generatesudoku
    spec:
      ports:
        - name: "8083"
          port: 8083
          targetPort: 8081
      selector:
        io.kompose.service: generatesudoku
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: login
      name: login
    spec:
      ports:
        - name: "8081"
          port: 8081
          targetPort: 8081
      selector:
        io.kompose.service: login
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        io.kompose.service: mongodb
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      name: rabbitmq
    spec:
      ports:
        - name: "5672"
          port: 5672
          targetPort: 5672
        - name: "15672"
          port: 15672
          targetPort: 15672
      selector:
        io.kompose.service: rabbitmq
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: startsudoku
      name: startsudoku
    spec:
      ports:
        - name: "8082"
          port: 8082
          targetPort: 8081
      selector:
        io.kompose.service: startsudoku
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: generatesudoku
      name: generatesudoku
    spec:
      containers:
        - env:
            - name: MONGODB_CONNECTION
              value: mongodb
            - name: MONGODB_PASSWORD
              value: admin
            - name: MONGODB_USER
              value: admin
            - name: RABBITMQ_CONNECTION
              value: rabbitmq
            - name: RABBITMQ_PASSWORD
              value: bunny
            - name: RABBITMQ_USER
              value: bunny
          image: sudokus/generate
          imagePullPolicy: IfNotPresent
          name: generatesudoku
          ports:
            - containerPort: 8081
          resources: {}
      restartPolicy: OnFailure
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: login
      name: login
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: login
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --out kubernetes
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: login
        spec:
          containers:
            - env:
                - name: MONGODB_CONNECTION
                  value: mongodb
                - name: MONGODB_PASSWORD
                  value: admin
                - name: MONGODB_USER
                  value: admin
              image: sudokus/login
              imagePullPolicy: IfNotPresent
              name: login
              ports:
                - containerPort: 8081
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongodb
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --out kubernetes
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: mongodb
        spec:
          containers:
            - env:
                - name: MONGO_INITDB_ROOT_PASSWORD
                  value: admin
                - name: MONGO_INITDB_ROOT_USERNAME
                  value: admin
              image: mongo:latest
              name: mongodb
              ports:
                - containerPort: 27017
              resources: {}
              volumeMounts:
                - mountPath: /data/db
                  name: mongodb-claim0
          restartPolicy: Always
          volumes:
            - name: mongodb-claim0
              persistentVolumeClaim:
                claimName: mongodb-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb-claim0
      name: mongodb-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      name: rabbitmq
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: rabbitmq
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --out kubernetes
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.service: rabbitmq
        spec:
          containers:
            - env:
                - name: RABBITMQ_DEFAULT_PASS
                  value: bunny
                - name: RABBITMQ_DEFAULT_USER
                  value: bunny
              image: rabbitmq:3-management
              name: rabbitmq
              ports:
                - containerPort: 5672
                - containerPort: 15672
              resources: {}
          hostname: rabbitmq
          restartPolicy: Always
    status: {}
  - apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        kompose.cmd: kompose convert --out kubernetes
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: startsudoku
      name: startsudoku
    spec:
      containers:
        - env:
            - name: MONGODB_CONNECTION
              value: mongodb
            - name: MONGODB_PASSWORD
              value: admin
            - name: MONGODB_USER
              value: admin
            - name: RABBITMQ_CONNECTION
              value: rabbitmq
            - name: RABBITMQ_PASSWORD
              value: bunny
            - name: RABBITMQ_USER
              value: bunny
          image: sudokus/start
          imagePullPolicy: IfNotPresent
          name: startsudoku
          ports:
            - containerPort: 8081
          resources: {}
      restartPolicy: OnFailure
    status: {}
kind: List
metadata: {}

